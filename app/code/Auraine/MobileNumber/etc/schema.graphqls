type Customer {
    mobilenumber: String @doc(description: "Customer Mobile Number") @resolver(class: "\\Auraine\\MobileNumber\\Model\\Resolver\\MobileNumber")
}

type Query {
    checkCustomerExists(field_value:String, type:String) : Boolean @resolver( class: "\\Auraine\\MobileNumber\\Model\\Resolver\\CheckCustomerExists" ) @doc(description: "Customer exist or not based on email & mobile")
    getMobileUsingEmail(email: String!): String @resolver ( class: "\\Auraine\\MobileNumber\\Model\\Resolver\\GetMobileUsingEmail" ) @doc(description: "Customer exist or not based on email & mobile")
}

type Mutation {
    generateCustomerTokenMobile(mobile: String! @doc(description: "The customer's mobile number."), password: String! @doc(description: "The customer's password.")): CustomerToken @resolver(class: "\\Auraine\\MobileNumber\\Model\\Resolver\\GenerateCustomerTokenMobile") @doc(description:"Generate a token for specified customer.")
}
